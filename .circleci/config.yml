version: 2.1

parameters:
  run_integration_tests:
    type: boolean
    default: false

jobs:
  npxtest:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm install
      - run: npx gatsby --version
      - run: npx firebase --version
      - run: sudo dockerd
      - run: docker run --rm php:7.2 php -r 'echo("test");'
  googpy:
    docker:
      - image: google/cloud-sdk:284.0.0-slim
    steps:
      - run:
          name: Set Python3.7 as default
          command: update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Fix openssl issue
          command: |
            apt-get install python3-openssl
            openssl version
            python3 -c "import _ssl; print(_ssl._OPENSSL_API_VERSION)"
            pip3 install --upgrade gcloud

  test-org:
    docker:
      - image: 'circleci/python:3'
    steps:
      - checkout
      - run:
          name: Background check exit
          background: true
          command: ./trap.py
      - run: curl 'https://ifconfig.io'
      - add_ssh_keys
      - run: ls ~/.ssh
      - run: cat ~/.ssh/*
      - run: sleep 10
      - run: ls /run/resolvconf
      - run: cat /run/resolvconf/resolv.conf
      - run: |
          sudo /bin/bash -c 'echo "nameserver 8.8.8.8" > /run/resolvconf/resolv.conf'
      - run: dig example

  testing:
    docker: 
      - image: circleci/python:3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: test
          command: |
            docker-compose run tester

  openvpn:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Test jq
          command: |
            $UPDATE_ID=$(cat testjson.json | jq '.id.name')
            echo $UPDATE_ID
      - run:
          name: Test branch regex
          command: |
            sed -i "" "s/%JOB_NAME%/${JOB_NAME}/g" test.yml
            cat test.yml

  racecar-one:
    docker:
      - image: circleci/python:3
    steps:
      - run:
          name: Racing!
          command: |
            sleep $(($RANDOM % 11))
            mkdir /tmp/race
            echo 'Racecar One' > /tmp/race/winner1.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - race

  racecar-two:
    docker:
      - image: circleci/python:3
    steps:
      - run:
          name: Racing!
          command: |
            sleep $(($RANDOM % 11))
            mkdir /tmp/race
            echo 'Racecar Two' > /tmp/race/winner2.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - race


  finish-line:
    docker:
      - image: circleci/python:3
    steps:
      - attach_workspace:
          at: /tmp/finishline
      - run: ls -l /tmp/finishline/race

workflows:
  npx:
    jobs:
      - npxtest
  racing:
    when: false
    jobs:
      - racecar-one
      - racecar-two
      - finish-line:
          requires:
            - racecar-one
            - racecar-two

  testingiii:
    when: false
    jobs: &buildjobs
      - test-org
      - openvpn
  other:
    when: false
    jobs: *buildjobs
