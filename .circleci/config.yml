version: 2.1

orbs:
  win: circleci/windows@2.2.0
  browser-tools: circleci/browser-tools@0.1.4
  test-splitting-debug: mkly/test-splitting-debug@0.1.0
  maven: circleci/maven@1.0.1

parameters:
  run_integration_tests:
    type: boolean
    default: false

jobs:
  macdocker:
    macos:
      xcode: 11.3.0
    steps:
      - checkout
      - run: |
        curl -L 'https://download.docker.com/mac/static/stable/x86_64/docker-18.09.9.tgz' --output docker.tgz
        mkdir /tmp/cci-docker
        tar xzvf docker.tar.gz -C /tmp/cci-docker
        sudo cp /tmp/cci-docker/docker/docker /usr/local/bin
        sudo sudo chmod a+x /usr/local/bin/docker
      - run: docker -H remote-docker docker build .
  keanu:
    docker:
      - image: circleci/python:3.7
    parameters:
      test:
        type: string
      two:
        type: string
      three:
        type: string
      other:
        type: string
    steps:
      - run: echo <<parameters.test>>
      - run: echo <<parameters.two>>
      - run: echo <<parameters.three>>
      - run: echo <<parameters.other>>
  phhhp:
    docker:
      - image: circleci/php:7.1-apache-stretch-node-browsers
    steps:
      - setup_remote_docker
      - run: ssh remote-docker 'df -i'
  next:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run: sleep 500
      - run: python --version
      - run: python3
      - run: which pip3
      - run: pip3 install pytest

  pgcitext:
    docker:
      - image: circleci/python:3.8
    steps:
      - run: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get -y update && sudo apt-get install -y git-lfs
          git lfs install
      - checkout
          #- run: |
          #echo $COMMAND
          #git config --global user.email "you@example.com"
          #git config --global user.name "Your Name"
          #echo ' ' > test.txt
          #git init
          #git add test.txt
          #git commit -m "test"
          #GIT_SSH_COMMAND='$COMMAND' git push git@github.com:mkly/trouble.git master
  npxtest:
    docker:
      - image: circleci/node:10
    steps:
      #- run: echo $PATH
      #- run: curl -u mkly:${GITHUB_TOKEN} https://api.github.com/repos/${CIRCLE_PR_USERNAME}/${CIRCLE_PR_REPONAME}/pulls/${CIRCLE_PR_NUMBER}
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin
      - checkout
      - run: docker build .
  winn:
    executor:
      name: win/default
    steps:
      - run:
          name: Execute
          command: |
            dir C:\Program Files (x86)
          shell: cmd.exe
  googpy:
    docker:
      - image: circleci/python
    steps:
      - run: cat /etc/ssh/ssh_config
      - run: cat ~/.ssh/config
  test-org:
    docker:
      - image: 'circleci/python:3'
    steps:
      - checkout
      - run:
          name: Background check exit
          background: true
          command: ./trap.py
      - run: curl 'https://ifconfig.io'
      - add_ssh_keys
      - run: ls ~/.ssh
      - run: cat ~/.ssh/*
      - run: sleep 10
      - run: ls /run/resolvconf
      - run: cat /run/resolvconf/resolv.conf
      - run: |
          sudo /bin/bash -c 'echo "nameserver 8.8.8.8" > /run/resolvconf/resolv.conf'
      - run: dig example

  testing:
    docker: 
      - image: circleci/python:3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: test
          command: |
            docker-compose run tester

  openvpn:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Test jq
          command: |
            $UPDATE_ID=$(cat testjson.json | jq '.id.name')
            echo $UPDATE_ID
      - run:
          name: Test branch regex
          command: |
            sed -i "" "s/%JOB_NAME%/${JOB_NAME}/g" test.yml
            cat test.yml

  racecar-one:
    docker:
      - image: circleci/python:3
    steps:
      - run:
          name: Racing!
          command: |
            sleep $(($RANDOM % 11))
            mkdir /tmp/race
            echo 'Racecar One' > /tmp/race/winner1.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - race

  racecar-two:
    docker:
      - image: circleci/python:3
    steps:
      - run:
          name: Racing!
          command: |
            sleep $(($RANDOM % 11))
            mkdir /tmp/race
            echo 'Racecar Two' > /tmp/race/winner2.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - race


  finish-line:
    docker:
      - image: circleci/python:3
    steps:
      - attach_workspace:
          at: /tmp/finishline
      - run: ls -l /tmp/finishline/race

  mavv:
    docker:
      - image: circleci/openjdk:13.0.1-jdk-buster-browsers
    steps:
      - run: sudo apt-get update && sudo apt-get install dnsutils
      - checkout
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run: dig @1.1.1.1 int-schomp.a2zsync.com
      - run: dig int-schomp.a2zsync.com
      - run:
          name: Start Selenium
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - run: mvn test
      - store_artifacts:
          path: test-reports/selenium.log

executors:
  jdk-browsers:

workflows:
  maxt:
    when: false
    jobs:
      - keanu:
          matrix:
            parameters:
              test: ["a", "b", "c"]
              other: ["ll", "lll"]
              two: ["nn", "mm", "vv", "a"]
              three: ["bb", "jj", "kk"]
            exclude:
              - test: "a"
                two: "a"
                other: "ll"
                three: "bb"

  macdockerrr:
    jobs:
      - macdocker
  mavvv:
    when: false
    jobs:
      - mavv

  next:
    when: false
    jobs:
      - next

  npx:
    when: false
    jobs:
      - pgcitext:
          filters:
            tags:
              only: /.*/

  racing:
    when: false
    jobs:
      - racecar-one
      - racecar-two
      - finish-line:
          requires:
            - racecar-one
            - racecar-two

  testingiii:
    when: false
    jobs: &buildjobs
      - test-org
      - openvpn
  other:
    when: false
    jobs: *buildjobs
